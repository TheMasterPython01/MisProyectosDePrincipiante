from functools import reduce
from collections import Counter

sales = [
    {
        "customer": "Alice",
        "products": [
            {"name": "Shirt", "quantity": 2, "unit_price": 15},
            {"name": "Pants", "quantity": 1, "unit_price": 25},
        ],
    },
    {
        "customer": "Bruno",
        "products": [
            {"name": "Shirt", "quantity": 1, "unit_price": 15},
            {"name": "Shoes", "quantity": 1, "unit_price": 50},
        ],
    },
    {
        "customer": "Clara",
        "products": [{"name": "Shirt", "quantity": 3, "unit_price": 15}],
    },
]


def total_sales(customer):
    return reduce(
        lambda acc, product: acc + product["quantity"] * product["unit_price"],
        customer["products"],
        0,
    )


total_sales_sum = reduce(lambda acc, customer: acc + total_sales(customer), sales, 0)

print(f"The total sales amount is ${total_sales_sum:.2f}")


def total_products(customer):
    return reduce(
        lambda acc, product: acc + product["quantity"], customer["products"], 0
    )


total_products_sold = reduce(
    lambda acc, customer: acc + total_products(customer), sales, 0
)

print(f"Total number of products sold: {total_products_sold}")

product_counter = Counter()

for sale in sales:
    for product in sale["products"]:
        product_counter[product["name"]] += product["quantity"]

most_sold_product = product_counter.most_common(1)[0]

print(
    f"The most sold product is {most_sold_product[0]} with {most_sold_product[1]} units"
)
